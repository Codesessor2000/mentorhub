generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      Role
  sessionsAsMentor  Session[] @relation("MentorSessions")
  sessionsAsMentee  Session[] @relation("MenteeSessions")
  feedbackGiven     Feedback[] @relation("FeedbackByMentee")
  feedbackReceived  Feedback[] @relation("FeedbackForMentor")
  createdAt DateTime @default(now())
}

model Session {
  id         Int      @id @default(autoincrement())
  mentor     User     @relation("MentorSessions", fields: [mentorId], references: [id])
  mentorId   Int
  mentee     User     @relation("MenteeSessions", fields: [menteeId], references: [id])
  menteeId   Int
  time       DateTime
  status     SessionStatus
  notes      String?
  meetingUrl String?
  feedback   Feedback?
}

model Feedback {
  id         Int      @id @default(autoincrement())
  session    Session  @relation(fields: [sessionId], references: [id])
  sessionId  Int      @unique
  byMentee   User     @relation("FeedbackByMentee", fields: [byMenteeId], references: [id])
  byMenteeId Int
  forMentor  User     @relation("FeedbackForMentor", fields: [forMentorId], references: [id])
  forMentorId Int
  rating     Int
  comment    String
  createdAt  DateTime @default(now())
}

enum Role {
  MENTOR
  MENTEE
}

enum SessionStatus {
  PENDING
  APPROVED
  DECLINED
  COMPLETED
}
